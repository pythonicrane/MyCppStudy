{
    //安装的插件列表：Bracket Pair Colorizer，C/C++ for Visual Studio Code,C/C++ Clang Command Adapter,C/C++ Snippets,Code Runner,GBKtoUTF8,Include Autocomplete,OneDark-Pro,Python
    "files.defaultLanguage": "cpp", // ctrl+N新建文件后默认的语言

    "code-runner.runInTerminal": true, // 设置成false会在“输出”中输出，无法交互
    "code-runner.executorMap": {
        "c": "cd $dir && clang $fileName -o $fileNameWithoutExt.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c11 && $dir$fileNameWithoutExt",
        "cpp": "cd $dir && clang++ $fileName -o $fileNameWithoutExt.exe -Wall -g -Og -static-libgcc -fcolor-diagnostics --target=x86_64-w64-mingw -std=c++17 && $dir$fileNameWithoutExt"
    }, // 设置code runner的命令行
    "code-runner.saveFileBeforeRun": true, // run code前保存
    "code-runner.preserveFocus": true, // 若为false，run code后光标会聚焦到终端上。如果需要频繁输入数据可设为false
    "code-runner.clearPreviousOutput": false, // 每次run code前清空属于code runner的终端消息

    "C_Cpp.clang_format_sortIncludes": true, // 格式化时调整include的顺序（按字母排序）
    "C_Cpp.intelliSenseEngine": "Default", // 可以为Default或Tag Parser，后者较老，功能较简单。具体差别参考cpptools插件文档
    "C_Cpp.errorSquiggles": "Disabled", // 因为有clang的lint，所以关掉
    "editor.formatOnType": true, // 输入时就进行格式化，默认触发字符较少，分号可以触发
    "editor.snippetSuggestions": "top", // snippets代码优先显示补全

    "clang.cflags": [ // 控制c语言静态检测的参数
        "--target=x86_64-w64-mingw",
        "-std=c11",
        "-Wall"
    ],
    "clang.cxxflags": [ // 控制c++静态检测时的参数
        "--target=x86_64-w64-mingw",
        "-std=c++11",
        "-Wall"
    ],
    "clang.completion.enable": false,
    "files.associations": {
        "iostream": "cpp",
        "istream": "cpp",
        "*.tcc": "cpp",
        "cctype": "cpp",
        "clocale": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "exception": "cpp",
        "initializer_list": "cpp",
        "iosfwd": "cpp",
        "limits": "cpp",
        "new": "cpp",
        "numeric": "cpp",
        "ostream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "type_traits": "cpp",
        "typeinfo": "cpp",
        "utility": "cpp",
        "string": "cpp"
    } // 效果稍好，但太卡，故关掉
}

/*全局设置
{
    "workbench.colorTheme": "One Dark Pro", // 主题
    "editor.fontFamily": "Consolas, 微软雅黑", // 控制编辑器字体
    "editor.fontSize": 18,
    "editor.lineHeight": 19,
    "workbench.colorCustomizations": {
        "activityBar.foreground": "#91c467", // 自定义颜色
        "editor.background": "#151515",
        "activityBar.background":"#202020",
        "sideBar.background":"#252525"
    },
    "files.trimTrailingWhitespace": true, // 保存时，删除每一行末尾的空格
    "git.enabled": true, // 如果你不用git，我建议你关闭它
    "editor.minimap.enabled": false, // 我个人不用minimap，就是右边那个东西

    "editor.dragAndDrop": false, // 选中文字后，可以拖动它们调整位置。我是不需要
    "files.autoGuessEncoding": true,
    "sync.gist": "966eab9d5ae4325d7d39792602f63d03",
    "sync.autoDownload": false,
    "sync.autoUpload": false,
    "sync.lastDownload": "",
    "sync.forceDownload": false,
    "sync.host": "",
    "sync.pathPrefix": "",
    "sync.quietSync": false,
    "sync.askGistName": false,

}
*/